version: '3.8'

networks:
  default:
    external: true
    name: shared_net

services:
  storage-service:
    build:
      context: .
      dockerfile: storage-service/Dockerfile
    container_name: storage-service
    working_dir: /app
    volumes:
      - ./storage-service:/app/storage-service
      - ./kafka_common:/app/kafka_common
      - ./grpc:/app/grpc
      - ../../scripts:/app/scripts
    environment:
      - PYTHONPATH=/app/storage-service:/app/storage-service/grpc_internal
    networks:
      - default

  input-generator-service:
    build:
      context: .
      dockerfile: input-generator-service/Dockerfile
    container_name: input-generator-service
    working_dir: /app
    volumes:
      - ./input-generator-service:/app/input-generator-service
      - ./kafka_common:/app/kafka_common
      - ./grpc:/app/grpc
    environment:
      - PYTHONPATH=/app/input-generator-service:/app/input-generator-service/grpc_internal
    networks:
      - default

  execution-service:
    build:
      context: .
      dockerfile: execution-service/Dockerfile
    container_name: execution-service
    working_dir: /app
    volumes:
      - ./execution-service:/app/execution-service
      - ./kafka_common:/app/kafka_common
      - /var/run/docker.sock:/var/run/docker.sock
      - ./grpc:/app/grpc
    environment:
      - PYTHONPATH=/app/execution-service:/app/execution-service/grpc_internal
    networks:
      - default

  auth:
    build:
      context: .
      dockerfile: auth_server/Dockerfile
    container_name: auth
    restart: always
    env_file:
      - ./auth_server/.env
    environment:
      - PYTHONPATH=/app/auth_server:/app/auth_server/grpc_internal
    volumes:
      - ./auth_server:/app/auth_server
      - ./grpc:/app/grpc
    ports:
      - "9000:9000"
    networks:
      - default

  orchestrator:
    build:
      context: .
      dockerfile: orchestrator/Dockerfile
    container_name: orchestrator
    working_dir: /app
    volumes:
      - ./orchestrator:/app/orchestrator
      - ./grpc:/app/grpc
    environment:
      - PYTHONPATH=/app/orchestrator:/app/orchestrator/grpc_internal
    networks:
      - default

  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    container_name: api-gateway
    restart: always
    volumes:
      - ./api-gateway:/app/api-gateway
      - ./grpc:/app/grpc
    ports:
      - "9001:9001"
    networks:
      - default

  rate-limit-service:
    build:
      context: .
      dockerfile: rate-limit-service/Dockerfile
    container_name: rate-limit-service
    restart: always
    volumes:
      - ./rate-limit-service:/app/rate-limit-service
      - ./grpc:/app/grpc
    networks:
      - default

  gatekeeper-service:
    build:
      context: .
      dockerfile: gatekeeper-service/Dockerfile
    container_name: gatekeeper-service
    restart: always
    volumes:
      - ./gatekeeper-service:/app/gatekeeper-service
      - ./grpc:/app/grpc
    networks:
      - default
